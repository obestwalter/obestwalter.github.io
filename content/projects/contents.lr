title: Projects

---

content:

![my workspace and my favorite pair programming partner](flopsi-computer-resized.jpg)

*(my (realistically messy) workspace and Flopsi - my favourite pair programming partner)*

When I am not writing software at [Avira](https://avira.com), I sometimes like to write software at home ... I know - I'm very versatile.

## Some of my projects

* [Codecats CV](http://oliver.bestwalter.de/codecats-cv) - project used for teaching "full stack" Python (with [Falk Heger](https://github.com/Falk92)).
* [cookiecutter-python-internal-project](https://github.com/obestwalter/cookiecutter-python-internal-project) - a cookiecutter loosely based on what we use internally at my company to give some ideas how to go about this
* [cookiecutter-tox-plugin](https://github.com/tox-dev/cookiecutter-tox-plugin) - cookiecutter to help you getting started writing your own tox plugins
* [commodorificator](https://gitlab.com/obestwalter/commodorificator) - little teaching vehicle to showcase the Gitlab workflow and to introduce hypothesis
* [devpi-cloud-test](https://github.com/obestwalter/devpi-cloud-test) - to use [Travis CI](https://travis-ci.org/) to test packages from [devpi](http://doc.devpi.net/) (not needed anymore since we moved to a different build process)
* [i3config](https://github.com/obestwalter/i3config) - my i3 configuration (using i3configger)
* [i3configger](https://github.com/obestwalter/i3configger) - a tool to make the configuration of the [i3wm tiling window manager](https://i3wm.org/) more malleable
* [lektor-jupyter-preprocess](https://github.com/obestwalter/lektor-jupyter-preprocess) - used for the Jupyter notebook rendering on this page
* [Mau Mau](http://oliver.bestwalter.de/mau-mau) - a complete project that can be used to learn about Python and it's ecosystem using a simple card game simulation as the teaching vehicle
* [pycharm-settings](https://github.com/obestwalter/pycharm-settings) - my PyCharm settings, mainly shared to show keyboard centric use 
* [tox-direct](https://github.com/obestwalter/tox-direct) - tox plugin to circumvent environment creation (used to help with transitioning project tests in containers)

## projects I am or was involved in

* [detox](https://github.com/tox-dev/detox) - distributed tox (inactive - is now part of tox)
* [pluggy](https://pluggy.readthedocs.io/) - a minimalist production ready plugin system (powering pytest and tox)
* [pyenv-installer](https://github.com/pyenv/pyenv-installer) - the installer for the great [pyenv](https://github.com/yyuu/pyenv) tool
* [py3status-pewpew](https://github.com/obestwalter/py3status-pewpew) - experiment at EuroPython sprint 2019: integrate pewpew with the py3status bar
* [pytest](http://doc.pytest.org) - my favorite testing framework
* [SaltStack](https://github.com/saltstack/salt) - software to automate the management and configuration of any infrastructure or application at scale
* [tox](https://tox.readthedocs.io) - a command line driven CI frontend and development task automation tool
* [tox-conda](https://github.com/tox-dev/tox-conda) - a tox plugin to make it cooperate with the [conda](https://docs.conda.io/) tool

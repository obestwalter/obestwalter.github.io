title: Hello
---
publishedOn: 2017-01-13
---
lastModified: 2017-01-14
---
content:

-1-456789-2-456789-3-456789-4-456789-5-456789-6-456789-7-456789

```python
def bla(a, b):
    print("Hello World!")
```

```ruby
require 'tmpdir'

ALL_VERSIONS = "3.6.0 3.5.2 3.4.5 3.3.6 2.7.13 2.6.9 pypy2-5.6.0"
VERSIONS = ENV["TOX_PYENV_VERSIONS"] || ALL_VERSIONS
ALT_TMP_DIR = File.join(ENV["TMPDIR"] || Dir.tmpdir(), "tox-vagrant")
VAGRANT_TMP_DIR_DST = "/home/vagrant/tmp"

Vagrant.configure("2") do |config|
    config.vm.box = "ogarcia/archlinux-x64"
    config.vm.provider "virtualbox" do |vb|
        vb.memory = "2048"
    end

    # Install build dependencies needed to compile Python interpreters
    config.vm.provision "shell",
        name: "install build dependencies",
        inline: 'pacman --noconfirm -S base-devel openssl zlib git xz'

    # Map a tmp dir from host (not enough space in guest)
    # If this is to slow: add an extra vdi or use different box
    Dir.mkdir(ALT_TMP_DIR) unless File.exists?(ALT_TMP_DIR)
    config.vm.synced_folder ALT_TMP_DIR, "/vagrant/home/tmp"

    # Install pyenv, all needed interpreters and activate them
    installPyenvScript = <<-HEREDOC
        export TMPDIR="#{VAGRANT_TMP_DIR_DST}"
        curl pyenv.run | sh
        export PATH="$HOME/.pyenv/bin:$PATH"
        eval "$(pyenv init -)"
        for version in #{VERSIONS}; do
            pyenv install -s $version
        done
        pyenv global #{VERSIONS}
        pip install -U tox
    HEREDOC
    config.vm.provision "shell",
        name: "install pyenv",
        inline: installPyenvScript,
        privileged: false

    # Add pyenv to interactive shell and use tmp with more space
    prepareEnvironmentScript = <<-HEREDOC
        sed -i '$ a\\export PATH="$HOME/.pyenv/bin:$PATH"' .bashrc
        sed -i '$ a\\eval "$(pyenv init -)"' .bashrc
        sed -i '$ a\\export TMPDIR="#{VAGRANT_TMP_DIR_DST}"' .bashrc
        sed -i '$ a\\cd /vagrant' .bashrc
        sed -i '$ a\\echo "HINT: just run: tox"' .bashrc
        sed -i '$ a\\echo "NOTE: you may add --skip-missing-interpreters"' .bashrc
    HEREDOC
    config.vm.provision "shell",
        name: "prepare environment",
        inline: prepareEnvironmentScript,
        privileged: false
end
```
